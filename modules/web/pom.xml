<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2015 European Commission

    Licensed under the EUPL, Version 1.1 or â€“ as soon they will be approved by the European Commission - subsequent versions of the EUPL (the "Licence");
    You may not use this work except in compliance with the Licence.
    You may obtain a copy of the Licence at:

        https://joinup.ec.europa.eu/software/page/eupl

    Unless required by applicable law or agreed to in writing, software distributed under the Licence is distributed on an "AS IS" basis,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the Licence for the specific language governing permissions and limitations under the Licence.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>eu.europa.ec.leos.prototype</groupId>
        <artifactId>leos-modules</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>leos-web</artifactId>
    <packaging>war</packaging>

    <name>Web</name>

    <description>LEOS Prototype Web Module</description>

    <properties>
        <!-- Project -->
        <project.final.name>leos-prototype-web</project.final.name>
        <project.web.context.path>/leos-prototype</project.web.context.path>
        <!-- LEOS -->
        <leos.generated-sources.path>${project.build.directory}/generated-sources/leos</leos.generated-sources.path>
    </properties>

    <dependencies>
        <!-- Leos modules -->
        <dependency>
            <groupId>eu.europa.ec.leos.prototype</groupId>
            <artifactId>leos-editor</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>eu.europa.ec.leos.prototype</groupId>
            <artifactId>leos-model</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>eu.europa.ec.leos.prototype</groupId>
            <artifactId>leos-support</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>eu.europa.ec.leos.prototype</groupId>
            <artifactId>leos-services</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>eu.europa.ec.leos.prototype</groupId>
            <artifactId>leos-webservices</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>eu.europa.ec.leos.prototype</groupId>
            <artifactId>leos-test-support</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <!-- Logging frameworks -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <!-- Spring framework -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!-- Vaadin framework -->
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-server</artifactId>
            <version>${vaadin.version}</version>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-shared</artifactId>
            <version>${vaadin.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client-compiled</artifactId>
            <version>${vaadin.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client</artifactId>
            <version>${vaadin.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client-compiler</artifactId>
            <version>${vaadin.version}</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-themes</artifactId>
            <version>${vaadin.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-theme-compiler</artifactId>
            <version>${vaadin.version}</version>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- Vaadin add-ons -->
        <dependency>
            <groupId>ru.xpoft.vaadin</groupId>
            <artifactId>spring-vaadin-integration</artifactId>
            <version>${spring-vaadin-integration.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.vaadin.addons</groupId>
            <artifactId>cssinject</artifactId>
            <version>${vaadin-cssinject.version}</version>
        </dependency>
        <dependency>
            <groupId>org.vaadin.addon</groupId>
            <artifactId>confirmdialog</artifactId>
            <version>${vaadin-confirmdialog.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.vaadin</groupId>
                    <artifactId>vaadin-server</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.vaadin</groupId>
                    <artifactId>vaadin-client-compiled</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.vaadin</groupId>
                    <artifactId>vaadin-themes</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- Libraries -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.final.name}-${leos.build.env}</finalName>
        <filters>
            <filter>src/main/filters/leos.properties</filter>
            <filter>src/main/filters/${leos.build.env}.properties</filter>
        </filters>
        <resources>
            <resource>
                <!-- Filtered resource files. -->
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                </includes>
            </resource>
            <resource>
                <!-- Non-filtered resource files. -->
                <filtering>false</filtering>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>**/*.properties</exclude>
                    <exclude>**/*.xml</exclude>
                </excludes>
            </resource>
            <resource>
                <!-- Filtered java template files as LEOS generated sources. -->
                <filtering>true</filtering>
                <directory>src/template/java</directory>
                <includes>
                    <include>**/*.java</include>
                </includes>
                <targetPath>${leos.generated-sources.path}</targetPath>
            </resource>
        </resources>
        <plugins>
            <!-- CLEAN -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <!-- Ensure the Widgetset directory is cleaned properly. -->
                            <directory>src/main/webapp/VAADIN/widgetsets</directory>
                        </fileset>
                        <fileset>
                            <!-- Ensure the GWT cache directory is cleaned properly. -->
                            <directory>src/main/webapp/VAADIN/gwt-unitCache</directory>
                        </fileset>
                        <fileset>
                            <!-- Ensure the compiled SASS styles are cleaned properly. -->
                            <directory>src/main/webapp/VAADIN/themes/leos</directory>
                            <includes>
                                <include>styles.css</include>
                            </includes>
                        </fileset>
                        <fileset>
                            <!-- Ensure overlays are cleaned properly. -->
                            <directory>overlays</directory>
                        </fileset>
                        <fileset>
                            <!-- Ensure logs are cleaned properly. -->
                            <directory>logs</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <!-- VAADIN -->
            <plugin>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-maven-plugin</artifactId>
                <configuration>
                    <extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
                    <!-- We are doing "inplace" compilation into VAADIN/widgetsets. -->
                    <webappDirectory>src/main/webapp/VAADIN/widgetsets</webappDirectory>
                    <hostedWebapp>src/main/webapp/VAADIN/widgetsets</hostedWebapp>
                    <noServer>true</noServer>
                    <draftCompile>${project.vaadin.draftCompile}</draftCompile>
                    <persistentunitcache>false</persistentunitcache>
                    <style>OBF</style>
                    <strict>true</strict>
                    <runTarget>http://localhost:8080/</runTarget>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>resources</goal>
                            <goal>update-theme</goal>
                            <goal>update-widgetset</goal>
                            <goal>compile-theme</goal>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- WAR -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <webXml>src/main/webapp/WEB-INF/web.xml</webXml>
                    <webResources>
                        <resource>
                            <filtering>true</filtering>
                            <directory>src/main/webapp/WEB-INF</directory>
                            <includes>
                                <include>web.xml</include>
                            </includes>
                            <targetPath>WEB-INF</targetPath>
                        </resource>
                        <resource>
                            <directory>src/main/js</directory>
                            <targetPath>VAADIN/js</targetPath>
                        </resource>
                    </webResources>
                    <overlays>
                        <overlay>
                            <!-- empty overlay represents the current build -->
                        </overlay>
                        <overlay>
                            <groupId>eu.europa.ec.leos.prototype</groupId>
                            <artifactId>leos-editor</artifactId>
                            <includes>
                                <include>js/editor/**</include>
                            </includes>
                            <targetPath>VAADIN</targetPath>
                        </overlay>
                    </overlays>
                </configuration>
            </plugin>

            <!-- JETTY -->
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <configuration>
                    <stopPort>9999</stopPort>
                    <stopKey>stopLeos</stopKey>
                    <webApp>
                        <contextPath>${project.web.context.path}</contextPath>
                        <descriptor>target/${project.build.finalName}/WEB-INF/web.xml</descriptor>
                    </webApp>
                    <war>target/${project.build.finalName}</war>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-continuation</artifactId>
                        <version>${jetty-maven-plugin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- TOMCAT -->
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <configuration>
                    <path>${project.web.context.path}</path>
                    <server>TomcatServer</server>
                </configuration>
            </plugin>

            <!-- JSHint -->
            <plugin>
                <groupId>com.cj.jshintmojo</groupId>
                <artifactId>jshint-maven-plugin</artifactId>
                <configuration>
                    <version>2.4.1</version>
                    <configFile>src/etc/js/jshint.conf.js</configFile>
                    <directories>
                        <directory>src/main/js</directory>
                    </directories>
                    <excludes>
                        <exclude>src/main/js/lib</exclude>
                    </excludes>
                    <reporter>jslint</reporter>
                    <reportFile>${project.build.directory}/jshint.xml</reportFile>
                    <failOnError>true</failOnError>
                </configuration>
            </plugin>

            <!-- Build Helper -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <!-- Add LEOS generated sources for compilation. -->
                                <source>${leos.generated-sources.path}</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <extensions>
            <!-- Enabling the use of FTP for deployment -->
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ftp</artifactId>
                <version>${wagon-ftp-extension.version}</version>
            </extension>
        </extensions>
    </build>
</project>
